1.  bash 1.sh 1 30
1.1 素数一般指质数。质数是指在大于1的自然数中，除了1和它本身以外不再有其他因数的自然数。
1.2 代码运行的方式为bash 1.sh n1 n2
    求1到20之间的素数: bash 1.sh 1 20
1.3 先对入参进行处理
    如果入参小于2，则取2
    如两个入参都小于2，则不符合要求
    经过处理后的参数为 numA和numB，其中numA<numB
1.4 使用for循环计算numA和numB之间的素数
    循环从numA开始，到numB结束，验证每个数字是否为素数
    根据素数的定义，将设待验证的数为i,只要使用i对范围（2,i)内的所有数取余，如果有任何一个余数为0，则i就不是素数。
        根据思路，验证过程使用循环，在循环开始使用标记字段flag，初始值为false，循环中只要取余操作为0，则标记字段flag=true，退出循环。在循环结束后，查看flag的值是否为false，如果为false则该数是素数，
    
2.  bash 2.sh
2.1 用循环打印出进度条。每隔0.2秒更新一次进度条
2.2 每次更新进度条，进度增长5%
2.3 循环实现，即开始时进度ratio为0，当ratio>100时循环退出，每次ratio增长5
    全局变量out表示输出的文本信息，每次循环增长后更新out，然后输出其中的内容。

3. bash 3.sh 4
3.1 递归调用n的阶层
3.2 假设阶层函数为 f(n) 则根据阶层的定义，f(n) = f(n-1) * n
3.3 根据3.2实现函数阶层函数，每次递归调用f(n-1)的结果乘以n

4. bash 4.sh 127.0.0.1
4.1 ping时，如果对方网络可达，则有相应的ttl。使用grep查询输出中是否存在ttl。
4.2 如果grep返回为真，则会继续执行逻辑与判断，打印网络可达的信息，否则执行逻辑或判断打印网络不可达

5. bash 5.sh 
5.1 乘法口诀是阶梯形状，有9行，每行有等于行号个元素
5.2 使用双重循环
    外层循环从1开始，到9结束。外层循环变量为i
    内层循环从1开始，到i结束。内层循环执行完后打印这一行的乘法口诀表

    bash 1.sh 1 20 && \
    bash 2.sh && \
    bash 3.sh 5 && \
    bash 4.sh 127.0.0.1 && \
    bash 4.sh 10.1.21.11 &&\
    bash 5.sh 